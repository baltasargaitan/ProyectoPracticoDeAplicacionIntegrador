@model RedSismica.Models.OrdenInspeccion
@{
    var motivos = ViewBag.Motivos as List<RedSismica.Models.TipoMotivoBaja>;
    ViewData["Title"] = "Cerrar Orden de Inspección";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">

<div class="container mt-5">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h3><i class="bi bi-clipboard-check"></i> Cerrar Orden de Inspección #@Model.Id</h3>
        </div>
        <div class="card-body">
            <dl class="row mb-4">
                <dt class="col-sm-3">Estación Sismológica:</dt>
                <dd class="col-sm-9">@Model.EstacionSismologica?.Nombre</dd>
                <dt class="col-sm-3">Sismógrafo:</dt>
                <dd class="col-sm-9">@Model.EstacionSismologica?.Sismografo?.Identificador</dd>
                <dt class="col-sm-3">Responsable:</dt>
                <dd class="col-sm-9">@Model.Empleado?.Nombre</dd>
            </dl>
            <form method="post" class="needs-validation" novalidate>
                <div class="mb-3">
                    <label for="observacion" class="form-label fw-bold">1. Observación de cierre <span class="text-danger">*</span></label>
                    <textarea class="form-control" id="observacion" name="observacion" rows="2" required></textarea>
                    <div class="invalid-feedback">Debe ingresar una observación.</div>
                </div>
                <div class="mb-3">
                    <label class="form-label fw-bold">2. Seleccione uno o más motivos por los que el sismógrafo queda fuera de servicio <span class="text-danger">*</span></label>
                    <div class="row">
                        @for (int i = 0; i < motivos.Count; i++)
                        {
                            <div class="col-md-6 mb-2">
                                <div class="form-check">
                                    <input class="form-check-input motivo-checkbox" type="checkbox" name="motivoIds" id="motivo_@motivos[i].Id" value="@motivos[i].Id" />
                                    <label class="form-check-label" for="motivo_@motivos[i].Id">
                                        @motivos[i].Descripcion
                                    </label>
                                </div>
                                <input type="text" class="form-control mt-1 comentario-input" name="comentarios" placeholder="Comentario para este motivo" disabled required />
                                <div class="invalid-feedback">Debe ingresar un comentario para cada motivo seleccionado.</div>
                            </div>
                        }
                    </div>
                </div>
                <div class="d-flex justify-content-between mt-4">
                    <a href="@Url.Action("Index", "OrdenInspeccion")" class="btn btn-secondary">
                        <i class="bi bi-x-circle"></i> Cancelar
                    </a>
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-check-circle"></i> Confirmar cierre
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // Habilita/deshabilita el input de comentario según el checkbox
    document.querySelectorAll('.motivo-checkbox').forEach((checkbox, idx) => {
        checkbox.addEventListener('change', function () {
            const comentario = document.querySelectorAll('.comentario-input')[idx];
            comentario.disabled = !this.checked;
            if (!this.checked) comentario.value = '';
        });
    });

    // Validación Bootstrap
    (function () {
        'use strict'
        var forms = document.querySelectorAll('.needs-validation')
        Array.prototype.slice.call(forms)
            .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    // Al menos un motivo seleccionado
                    var checked = form.querySelectorAll('.motivo-checkbox:checked').length > 0;
                    if (!checked) {
                        event.preventDefault()
                        event.stopPropagation()
                        alert('Debe seleccionar al menos un motivo.');
                        return false;
                    }
                    // Comentarios requeridos solo para los motivos seleccionados
                    form.querySelectorAll('.motivo-checkbox').forEach(function (cb, idx) {
                        var comentario = form.querySelectorAll('.comentario-input')[idx];
                        if (cb.checked && comentario.value.trim() === '') {
                            comentario.classList.add('is-invalid');
                            event.preventDefault();
                            event.stopPropagation();
                        } else {
                            comentario.classList.remove('is-invalid');
                        }
                    });
                    form.classList.add('was-validated')
                }, false)
            })
    })()
</script>